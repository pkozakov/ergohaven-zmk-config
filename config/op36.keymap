#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp LBKT>;
            key-positions = <6 7>;
        };

        hrdsgn {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q        &kp W        &kp E         &kp R         &kp T                                  &kp Y        &kp U          &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LSHFT D  &hml LCTRL F  &kp G                                  &kp H        &hmr RCTRL J   &hmr RSHFT K  &hmr LALT L  &hmr RGUI SEMICOLON
  &kp Z        &kp X        &kp C         &kp V         &kp B                                  &kp N        &kp M          &kp COMMA     &kp DOT      &kp SQT
                                          &kp TAB       &lt 1 GRAVE  &lt 4 SPACE    &kp ENTER  &lt 2 SLASH  &kp BACKSPACE
            >;
        };

        nav {
            bindings = <
  &kp N1        &kp N2        &kp N3         &kp N4         &kp N5                        &kp SLASH   &kp BACKSLASH    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSPACE
  &hml LGUI N6  &hml LALT N7  &hml LSHFT N8  &hml LCTRL N9  &kp N0                        &kp DEL     &hmr RCTRL LEFT  &hmr RSHFT UP     &hmr LALT DOWN     &hmr RGUI RIGHT
  &kp TAB       &trans        &trans         &trans         &kp GRAVE                     &kp INSERT  &kp HOME         &kp PG_DN         &kp PG_UP          &kp END
                                             &trans         &trans     &trans    &kp ESC  &mo 3       &trans
            >;
        };

        sym {
            bindings = <
  &none           &kp LT          &kp EQUAL         &kp GT           &kp GRAVE                    &kp CARET  &kp LBKT         &kp UNDER        &kp RBKT        &none
  &hml LGUI BSLH  &hml LALT LPAR  &hml LSHFT MINUS  &hml LCTRL RPAR  &kp PLUS                     &kp PRCNT  &hmr RCTRL LBRC  &hmr RSHFT SEMI  &hmr LALT RBRC  &hmr RGUI EXCL
  &kp HASH        &kp STAR        &kp COLON         &kp FSLH         &none                        &none      &kp PIPE         &kp TILDE        &kp AMPS        &kp DLLR
                                                    &trans           &mo 4      &trans    &trans  &trans     &trans
            >;
        };

        mouse {
            bindings = <
  &trans    &trans          &mmv MOVE_UP    &msc SCRL_UP     &mkp MCLK                    &mkp MCLK  &msc SCRL_UP    &mmv MOVE_UP    &trans           &trans
  &mkp MB1  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK                    &mkp MB2   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB1
  &trans    &trans          &trans          &msc SCRL_DOWN   &trans                       &trans     &msc SCRL_DOWN  &trans          &trans           &trans
                                            &trans           &trans     &trans    &trans  &trans     &trans
            >;
        };

        adj {
            bindings = <
  &bootloader  &kp F1        &kp F2         &kp F3         &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &kp LGUI     &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8                     &out OUT_BLE  &hmr RCTRL C_VOL_DN  &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &none        &kp F9        &kp F10        &kp F11        &kp F12                    &out OUT_USB  &kp C_PREV           &kp C_PP           &kp C_NEXT          &studio_unlock
                                            &trans         &trans   &trans    &trans  &trans        &trans
            >;
        };
    };
};
